{"version":3,"sources":["Components/Header/index.js","Components/FormsUI/Textfield/index.js","Components/FormsUI/Select/index.js","Components/FormsUI/DataTimePicker/index.js","Components/FormsUI/Checkbox/index.js","Components/FormsUI/Button/index.js","App.js","index.js"],"names":["Header","AppBar","position","Toolbar","Typography","variant","TextfieldWrapper","name","otherProps","useField","field","mata","configTextfield","fullWidth","touched","error","helperText","TextField","SelectWrapper","options","setFieldValue","useFormikContext","meta","configSelect","select","onChange","evt","value","target","Object","keys","map","item","pos","MenuItem","DateTimePicker","configDateTimePicker","type","InputLabelProps","shrink","CheckboxWrapper","label","legend","configCheckbox","checked","configFormControl","FormControl","FormLabel","component","FormGroup","FormControlLabel","control","Checkbox","ButtonWrapper","children","submitForm","configButton","color","onClick","Button","useStyles","makeStyles","theme","formWrapper","marginTop","spacing","marginBottom","INITIAL_FORM_STATE","firstName","lastName","email","phone","addressLine1","addressLine2","city","state","country","arrivealDate","departureDate","message","termsOfService","FORM_VALIDATION","Yup","shape","required","integer","typeError","oneOf","App","classes","Grid","container","xs","Container","maxWidth","className","initialValues","validationSchema","onSubmit","values","console","log","Textfield","Select","countries","multiline","rows","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.46058475.chunk.js","sourcesContent":["import React from 'react';\nimport { Toolbar, AppBar, Typography } from '@material-ui/core';\n\nconst Header = ({ }) => {\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Typography variant=\"h6\">\n          Demo App\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header;","import React from 'react';\nimport { TextField } from '@material-ui/core';\nimport { useField } from 'formik';\n\nconst TextfieldWrapper = ({\n  name,\n  ...otherProps\n}) => {\n  const [field, mata] = useField(name);\n\n  const configTextfield = {\n    ...field,\n    ...otherProps,\n    fullWidth: true,\n    variant: 'outlined'\n  };\n\n  if (mata && mata.touched && mata.error) {\n    configTextfield.error = true;\n    configTextfield.helperText = mata.error;\n  }\n\n  return (\n    <TextField {...configTextfield} />\n  );\n};\n\nexport default TextfieldWrapper;\n","import React from 'react';\nimport { TextField, MenuItem } from '@material-ui/core';\nimport { useField, useFormikContext } from 'formik';\n\nconst SelectWrapper = ({\n  name,\n  options,\n  ...otherProps\n}) => {\n  const { setFieldValue } = useFormikContext();\n  const [field, meta] = useField(name);\n\n  const handleChange = evt => {\n    const { value } = evt.target;\n    setFieldValue(name, value);\n  };\n\n  const configSelect = {\n    ...field,\n    ...otherProps,\n    select: true,\n    variant: 'outlined',\n    fullWidth: true,\n    onChange: handleChange\n  };\n\n  if (meta && meta.touched && meta.error) {\n    configSelect.error = true;\n    configSelect.helperText = meta.error;\n  }\n\n  return (\n    <TextField {...configSelect}>\n      {Object.keys(options).map((item, pos) => {\n        return (\n          <MenuItem key={pos} value={item}>\n            {options[item]}\n          </MenuItem>\n        )\n      })}\n    </TextField>\n  );\n};\n\nexport default SelectWrapper;\n","import React from 'react';\nimport { TextField } from '@material-ui/core';\nimport { useField } from 'formik';\n\nconst DateTimePicker = ({\n  name,\n  ...otherProps\n}) => {\n  const [field, meta] = useField(name);\n\n  const configDateTimePicker = {\n    ...field,\n    ...otherProps,\n    type: 'date',\n    variant: 'outlined',\n    fullWidth: true,\n    InputLabelProps: {\n      shrink: true\n    }\n  };\n\n  if(meta && meta.touched && meta.error) {\n    configDateTimePicker.error = true;\n    configDateTimePicker.helperText = meta.error;\n  }\n\n  return (\n    <TextField\n      {...configDateTimePicker}\n    />\n  );\n};\n\nexport default DateTimePicker;\n","import React from 'react';\nimport {\n  Checkbox,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  FormLabel\n} from '@material-ui/core';\nimport { useField, useFormikContext } from 'formik';\n\nconst CheckboxWrapper = ({\n  name,\n  label,\n  legend,\n  ...otherProps\n}) => {\n  const { setFieldValue } = useFormikContext();\n  const [field, meta] = useField(name);\n\n  const handleChange = evt => {\n    const { checked } = evt.target;\n    setFieldValue(name, checked);\n  };\n\n  const configCheckbox = {\n    ...field,\n    onChange: handleChange\n  };\n\n  const configFormControl = {};\n  if (meta && meta.touched && meta.error) {\n    configFormControl.error = true;\n  }\n\n  return (\n    <FormControl {...configFormControl}>\n      <FormLabel component=\"legend\">{legend}</FormLabel>\n      <FormGroup>\n        <FormControlLabel\n          control={<Checkbox {...configCheckbox} />}\n          label={label}\n        />\n      </FormGroup>\n    </FormControl>\n  );\n};\n\nexport default CheckboxWrapper;\n","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport { useFormikContext } from 'formik';\n\nconst ButtonWrapper = ({\n  children,\n  ...otherProps\n}) => {\n  const { submitForm } = useFormikContext();\n\n  const handleSubmit = () => {\n    submitForm();\n  }\n\n  const configButton = {\n    variant: 'contained',\n    color: 'primary',\n    fullWidth: true,\n    onClick: handleSubmit\n  }\n\n  return (\n    <Button\n      {...configButton}\n    >\n      {children}\n    </Button>\n  );\n};\n\nexport default ButtonWrapper;\n","import React from 'react';\nimport Header from './Components/Header';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Container,\n  Grid,\n  Typography\n} from '@material-ui/core';\nimport Textfield from './Components/FormsUI/Textfield';\nimport Select from './Components/FormsUI/Select';\nimport DateTimePicker from './Components/FormsUI/DataTimePicker';\nimport Checkbox from './Components/FormsUI/Checkbox';\nimport Button from './Components/FormsUI/Button';\nimport countries from './data/countries.json';\n\nconst useStyles = makeStyles((theme) => ({\n  formWrapper: {\n    marginTop: theme.spacing(5),\n    marginBottom: theme.spacing(8),\n  },\n}));\n\nconst INITIAL_FORM_STATE = {\n  firstName: '',\n  lastName: '',\n  email: '',\n  phone: '',\n  addressLine1: '',\n  addressLine2: '',\n  city: '',\n  state: '',\n  country: '',\n  arrivealDate: '',\n  departureDate: '',\n  message: '',\n  termsOfService: false\n};\n\nconst FORM_VALIDATION = Yup.object().shape({\n  firstName: Yup.string()\n    .required('Required'),\n  lastName: Yup.string()\n    .required('Required'),\n  email: Yup.string()\n    .email('Invalid email.')\n    .required('Required'),\n  phone: Yup.number()\n    .integer()\n    .typeError('Please enter a valid phone number')\n    .required('Required'),\n  addressLine1: Yup.string()\n    .required('Required'),\n  addressLine2: Yup.string(),\n  city: Yup.string()\n    .required('Required'),\n  state: Yup.string()\n    .required('Required'),\n  country: Yup.string()\n    .required('Required'),\n  arrivealDate: Yup.date()\n    .required('Required'),\n  departureDate: Yup.date()\n    .required('Required'),\n  message: Yup.string(),\n  termsOfService: Yup.boolean()\n    .oneOf([true], 'The terms and conditions must be accepted.')\n    .required('The terms and conditions must be accepted.'),\n});\n\nconst App = () => {\n  const classes = useStyles();\n\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <Header />\n      </Grid>\n      <Grid item xs={12}>\n        <Container maxWidth=\"md\">\n          <div className={classes.formWrapper}>\n\n            <Formik\n              initialValues={{\n                ...INITIAL_FORM_STATE\n              }}\n              validationSchema={FORM_VALIDATION}\n              onSubmit={values => {\n                console.log(values);\n              }}\n            >\n              <Form>\n\n                <Grid container spacing={2}>\n\n                  <Grid item xs={12}>\n                    <Typography>\n                      Your details\n                    </Typography>\n                  </Grid>\n\n                  <Grid item xs={6}>\n                    <Textfield\n                      name=\"firstName\"\n                      label=\"First Name\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={6}>\n                    <Textfield\n                      name=\"lastName\"\n                      label=\"Last Name\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <Textfield\n                      name=\"email\"\n                      label=\"Email\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <Textfield\n                      name=\"phone\"\n                      label=\"Phone\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <Typography>\n                      Address\n                    </Typography>\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <Textfield\n                      name=\"addressLine1\"\n                      label=\"Address Line 1\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <Textfield\n                      name=\"addressLine2\"\n                      label=\"Address Line 2\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={6}>\n                    <Textfield\n                      name=\"city\"\n                      label=\"City\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={6}>\n                    <Textfield\n                      name=\"state\"\n                      label=\"State\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <Select\n                      name=\"country\"\n                      label=\"Country\"\n                      options={countries}\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <Typography>\n                      Booking information\n                    </Typography>\n                  </Grid>\n\n                  <Grid item xs={6}>\n                    <DateTimePicker\n                      name=\"arrivealDate\"\n                      label=\"Arrival Date\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={6}>\n                    <DateTimePicker\n                      name=\"departureDate\"\n                      label=\"Departure Date\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <Textfield\n                      name=\"message\"\n                      label=\"Message\"\n                      multiline={true}\n                      rows={4}\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <Checkbox\n                      name=\"termsOfService\"\n                      legend=\"Terms Of Service\"\n                      label=\"I agree\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <Button>\n                      Submit Form\n                    </Button>\n                  </Grid>\n\n\n                </Grid>\n\n              </Form>\n            </Formik>\n\n          </div>\n        </Container>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}